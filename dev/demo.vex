<template>
<div class="demo">
  <div class="demo-item">
    <h1 *if="show" :style="styl">
      <strong :text="title"></strong>!!!!
    </h1>
    <p *for="p in arr" :class="claz" :text="($index + 1) + '. ' + p"></p>
  </div>
  <div class="demo-item">
  <template *if="true">
    <button @click="hello($event)">hello</button>
    <pre id="output"></pre>
  </template>
  </div>
</div>
</template>

<script>
module.exports = {
  data: {
    arr: ['This is first paragraph', 'This is second paragraph'],
    fontSize: 24,
    styl2: ' color: red',
    claz: 'demo-grid',
    title: 'This is title!',
    name: 'world',
    show: true,
  },
  computed: {
    styl1 () {
      return `font-size: ${this.fontSize}px`
    },
    styl () {
      return `${this.styl1};${this.styl2}`
    }
  },
  methods: {
    hello (event) {
      let target = event.target
      this.name += '!!!'
      let text = `${target.textContent} ${this.name}`
      let output = document.getElementById('output')
      output.innerText += '\n' + text
    },
  },
  create () {
    this.name = 'Vexil'
  },
  mount () {
    setInterval(() => {
      if (this.fontSize <= 36) {
        this.fontSize++
      } else {
        this.fontSize = 24
      }
      this.show = !this.show
      if (this.arr.length > 5) {
        this.arr = [this.arr[0]]
      } else {
        this.arr.push(this.arr[0])
      }
    }, 2000)
    // this.arr = [this.arr[0]]
    // this.arr.push(this.arr[0])
  }
}
</script>

<style>
.demo {
  width: 80%;
  max-width: 400px;
  margin: 50vh auto 0;
  transform: translateY(-50%);
}
.demo-item {
  position: relative;
  padding: 15px;
  background-color: lightgray;
  counter-increment: c;
}
.demo-item+.demo-item {
  margin-top: 30px;
}
.demo-item::before {
  content: "demo "counter(c);
  position: absolute;
  top: -15px;
  left: -20px;
}
.demo-grid:nth-child(odd) {
  background-color: lightblue;
}
.demo-grid:nth-child(even) {
  background-color: lightgreen;
}
</style>
